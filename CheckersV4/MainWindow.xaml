<Window x:Class="CheckersV4.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CheckersV4"
        xmlns:viewmodels="clr-namespace:CheckersV4.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="700" Width="800">
    <Window.Background>
        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveCaptionColorKey}}"/>
    </Window.Background>
    <Window.DataContext>
        <viewmodels:BoardVM></viewmodels:BoardVM>
    </Window.DataContext>

    <Window.Resources>
        <DataTemplate DataType="{x:Type viewmodels:PieceVM}">
            <Button Name="PieceButton">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="{Binding IsSelected}" BlurRadius="20" ShadowDepth="0"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Image VerticalAlignment="Center" HorizontalAlignment="Center" Width="40" Height="40" Stretch="Fill" >
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsRed}" Value="True" />
                                                            <Condition Binding="{Binding IsKing}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Image.Source" Value="Resources/red_piece.png" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsRed}" Value="True" />
                                                            <Condition Binding="{Binding IsKing}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Image.Source" Value="Resources/red_king.png" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsRed}" Value="False" />
                                                            <Condition Binding="{Binding IsKing}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Image.Source" Value="Resources/white_king.png" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsRed}" Value="False" />
                                                            <Condition Binding="{Binding IsKing}" Value="False" />
                                                        </MultiDataTrigger.Conditions>

                                                        <Setter Property="Image.Source" Value="Resources/white_piece.png" />

                                                    </MultiDataTrigger>


                                                </Style.Triggers>
                                            </Style>

                                        </Image.Style>
                                    </Image>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Command" Value="{Binding SelectPieceCommand}">
                        </Setter>
                        <Setter Property="CommandParameter" Value="{Binding
                                    Path=DataContext,   
                                    RelativeSource={RelativeSource AncestorType=Window},  
                                    Mode=Default}">
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewmodels:CellVM}">
            <Button Name="GridButton">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Rectangle Fill="{Binding Background}">
                                    </Rectangle>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Command" Value="{Binding SelectTileCommand}">
                        </Setter>
                        <Setter Property="CommandParameter" Value="{Binding
                                    Path=DataContext,   
                                    RelativeSource={RelativeSource AncestorType=Window},  
                                    Mode=Default}">
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition Height="100"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="20"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.ColumnSpan="3">
            <Menu IsMainMenu="True" Grid.ColumnSpan="8">
                <MenuItem Header="_File">
                    <MenuItem Header="_New Game" Click="newGame_Click"/>
                    <MenuItem Header="_Save" Click="save_Click"/>
                    <MenuItem Header="_Open" Click="open_Click"/>
                    <MenuItem Header="_Istoric" Click="istoric_Click"/>
                    <MenuItem Header="_Help" Click="help_Click"/>
                    <MenuItem Header="_Exit" Click="exit_Click"/>
                </MenuItem>
            </Menu>
        </StackPanel>

        <ItemsControl Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" ItemsSource="{Binding Tiles}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid IsItemsHost="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter" x:Name="base">
                    <Setter Property="Grid.Row" Value="{Binding Location.Row}"/>
                    <Setter Property="Grid.Column" Value="{Binding Location.Column}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>

        <ItemsControl Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" ItemsSource="{Binding Pieces}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid IsItemsHost="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter" x:Name="pieces">
                    <Setter Property="Grid.Row" Value="{Binding Piece.PieceLocation.Row}"/>
                    <Setter Property="Grid.Column" Value="{Binding Piece.PieceLocation.Column}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
        <WrapPanel Width="150" Height="300"  Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" >
            <Label Name="labelNamePlayer1"  Content="{Binding Player1.Name}" Height="35" Width="120" HorizontalAlignment="Center" FontSize="18"/>
            <Label Content="Wins" Height="35" Width="90" HorizontalAlignment="Center" FontSize="18"/>
            <Label Name="labelWinsPlayer1" Content="{Binding Player1.Wins}" Height="35" Width="30" HorizontalAlignment="Center" FontSize="18" />
            <Label Content="Losses" Height="35" Width="90" HorizontalAlignment="Center" FontSize="18" />
            <Label Name="labelLossesPlayer1" Content="{Binding Player1.Losses}" Height="35" Width="30" HorizontalAlignment="Center" FontSize="18" />
            <Label Content="Draws" Height="35" Width="90" HorizontalAlignment="Center" FontSize="18" />
            <Label Name="labelDrawsPlayer1" Content="{Binding Player1.Draws}" Height="35" Width="30" HorizontalAlignment="Center" FontSize="18"/>
            

        </WrapPanel>
        <WrapPanel Width="150" Height="300"  Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" >
            <Label Name="labelNamePlayer2"  Content="{Binding Player2.Name}" Height="35" Width="120" HorizontalAlignment="Center" FontSize="18"/>
            <Label Content="Wins" Height="35" Width="90" HorizontalAlignment="Center" FontSize="18"/>
            <Label Name="labelWinsPlayer2" Content="{Binding Player2.Wins}" Height="35" Width="30" HorizontalAlignment="Center" FontSize="18"/>
            <Label Content="Losses" Height="35" Width="90" HorizontalAlignment="Center" FontSize="18"/>
            <Label Name="labelLossesPlayer2" Content="{Binding Player2.Losses}" Height="35" Width="30" HorizontalAlignment="Center" FontSize="18"/>
            <Label Content="Draws" Height="35" Width="90" HorizontalAlignment="Center" FontSize="18"/>
            <Label Name="labelDrawsPlayer2" Content="{Binding Player2.Draws}" Height="35" Width="30" HorizontalAlignment="Center" FontSize="18"/>
        
        </WrapPanel>

        

            <Image  Width="60" Height="60" Stretch="Fill" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="2" >
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPlayer1}" Value="True">
                                <Setter Property="Image.Source" Value="Resources/red_piece.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPlayer1}" Value="False">
                                <Setter Property="Image.Source" Value="Resources/white_piece.png" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        


    </Grid>
</Window>
